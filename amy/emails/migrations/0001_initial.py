# Generated by Django 3.2.19 on 2023-06-12 19:24

import uuid

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('signal', models.SlugField(help_text='Trigger that will queue this email template', max_length=255, unique=True)),
                ('subject', models.CharField(help_text="Enter text for email subject. If you need to use loops, conditions, etc., use <a href='https://docs.djangoproject.com/en/dev/topics/templates/#the-django-template-language'>Django templates language</a>.", max_length=255, verbose_name='Email subject')),
                ('from_header', models.EmailField(max_length=254)),
                ('reply_to_header', models.EmailField(blank=True, default='', help_text="If empty, the default reply-to address will be 'from_header'.", max_length=254)),
                ('cc_header', django.contrib.postgres.fields.ArrayField(base_field=models.EmailField(max_length=254), size=None)),
                ('bcc_header', django.contrib.postgres.fields.ArrayField(base_field=models.EmailField(max_length=255), size=None)),
                ('body', models.TextField(help_text="Enter Markdown for email body. If you need to use loops, conditions, etc., use <a href='https://docs.djangoproject.com/en/dev/topics/templates/#the-django-template-language'>Django templates language</a>.", verbose_name='Email body (markdown)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ScheduledEmail',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('state', models.CharField(choices=[('scheduled', 'Scheduled'), ('locked', 'Locked'), ('running', 'Running'), ('succeeded', 'Succeeded'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=30)),
                ('scheduled_at', models.DateTimeField(editable=False, verbose_name='Timestamp of scheduled run')),
                ('to_header', django.contrib.postgres.fields.ArrayField(base_field=models.EmailField(max_length=254), size=None, verbose_name='To (header)')),
                ('from_header', models.EmailField(max_length=254, verbose_name='From (header)')),
                ('reply_to_header', models.EmailField(blank=True, default='', max_length=254, verbose_name='Reply-To (header)')),
                ('cc_header', django.contrib.postgres.fields.ArrayField(base_field=models.EmailField(max_length=254), size=None, verbose_name='CC (header)', blank=True)),
                ('bcc_header', django.contrib.postgres.fields.ArrayField(base_field=models.EmailField(max_length=254), size=None, verbose_name='BCC (header)', blank=True)),
                ('subject', models.CharField(max_length=255, verbose_name='Subject (rendered from template)')),
                ('body', models.TextField(verbose_name='Email body (rendered from template)')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='emails.emailtemplate', verbose_name='Linked template')),
            ],
        ),
        migrations.CreateModel(
            name='ScheduledEmailLog',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('details', models.CharField(editable=False, max_length=255)),
                ('state_before', models.CharField(blank=True, choices=[('scheduled', 'Scheduled'), ('locked', 'Locked'), ('running', 'Running'), ('succeeded', 'Succeeded'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], editable=False, max_length=30, null=True)),
                ('state_after', models.CharField(choices=[('scheduled', 'Scheduled'), ('locked', 'Locked'), ('running', 'Running'), ('succeeded', 'Succeeded'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], editable=False, max_length=30)),
                ('scheduled_email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='emails.scheduledemail')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddIndex(
            model_name='scheduledemail',
            index=models.Index(fields=['state', 'scheduled_at'], name='emails_sche_state_f0cbf5_idx'),
        ),
    ]
