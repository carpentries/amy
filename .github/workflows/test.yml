# reusable workflow

on:
  workflow_call

jobs:
  test:
    name: ${{ matrix.test-type }} tests on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.12' ]
        test-type: ["Unit", "Migration"]
      fail-fast: false

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_amy
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install pipx
        python -m pipx ensurepath
        pipx install poetry==2.0.0
        poetry sync

    - name: Install NodeJS dependencies
      run: npm install

    - name: Check migrations
      run: |
        poetry run python manage.py makemigrations --dry-run --check;
        if [[ $? != "0" ]]; then
          exit 1;
        fi;
      env:
        AMY_DATABASE_HOST: localhost
        AMY_DATABASE_PORT: 5432
        AMY_DATABASE_NAME: test_amy
        AMY_DATABASE_USER: postgres
        AMY_DATABASE_PASSWORD: postgres

    - name: Create cache tables
      run: |
        poetry run python manage.py createcachetable
      env:
        AMY_DATABASE_HOST: localhost
        AMY_DATABASE_PORT: 5432
        AMY_DATABASE_NAME: test_amy
        AMY_DATABASE_USER: postgres
        AMY_DATABASE_PASSWORD: postgres

    - name: Collect static files
      run: |
        poetry run python manage.py collectstatic --no-input;
        if [[ $? != "0" ]]; then
          exit 1;
        fi;

    - name: Unit tests
      run: poetry run make test
      env:
        AMY_DATABASE_HOST: localhost
        AMY_DATABASE_PORT: 5432
        AMY_DATABASE_NAME: test_amy
        AMY_DATABASE_USER: postgres
        AMY_DATABASE_PASSWORD: postgres
      if: matrix.test-type == 'Unit'

    - name: Migration tests
      run: poetry run make test_migrations
      env:
        AMY_DATABASE_HOST: localhost
        AMY_DATABASE_PORT: 5432
        AMY_DATABASE_NAME: test_amy
        AMY_DATABASE_USER: postgres
        AMY_DATABASE_PASSWORD: postgres
      if: matrix.test-type == 'Migration'
