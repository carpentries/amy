name: Accessibility tests
on: 
  push:
    branches:
      - feature/a11y-checks

jobs:
  lhci:
    name: Run Lighthouse
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.11' ]

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_amy
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install pipenv
        pipenv sync --dev

    - name: Set up Node
      uses: actions/setup-node@v3
      with: 
        node-version: 16

    - name: Install NodeJS dependencies
      run: npm install

    - name: Check migrations
      run: |
        pipenv run python manage.py makemigrations --dry-run --check;
        if [[ $? != "0" ]]; then
          exit 1;
        fi;
      env:
        AMY_DATABASE_HOST: localhost
        AMY_DATABASE_PORT: 5432
        AMY_DATABASE_NAME: test_amy
        AMY_DATABASE_USER: postgres
        AMY_DATABASE_PASSWORD: postgres

    - name: Collect static files
      run: |
        pipenv run python manage.py collectstatic --no-input;
        if [[ $? != "0" ]]; then
          exit 1;
        fi;

    - name: Set up dev database
      run: |
        echo "yes" | pipenv run make dev_database
      env:
        AMY_DATABASE_HOST: localhost
        AMY_DATABASE_PORT: 5432
        AMY_DATABASE_NAME: test_amy
        AMY_DATABASE_USER: postgres
        AMY_DATABASE_PASSWORD: postgres

    - name: Set up Chromium
      uses: browser-actions/setup-chrome@v1

    - name: Get Chromium location
      id: chromium-location
      run: |
        echo "CHROMIUM_PATH=$(which chromium)" >> $GITHUB_OUTPUT

    - name: run Lighthouse CI
      run: |
        npm install -g @lhci/cli@0.11.x 
        npm install -g puppeteer
        lhci autorun
      env:
        AMY_DATABASE_HOST: localhost
        AMY_DATABASE_PORT: 5432
        AMY_DATABASE_NAME: test_amy
        AMY_DATABASE_USER: postgres
        AMY_DATABASE_PASSWORD: postgres
        LIGHTHOUSE_CHROMIUM_PATH: /opt/hostedtoolcache/chromium/latest/x64/chrome